######################################################################
# Default & All
#
.PHONY: default all

# Install npm packages, if any, runs the code formatter, runs the unit
# tests, and does a schema diff.
default: npm-install fmt lint test schema-diff

# Does everything default does AND THEN also run frontend testsâ€”which
# takes awhile to complete. If you just want to run the frontend
# tests, use test-ui.
.PHONY: all
all: default test-ui


######################################################################
# Utilities
#
.PHONY: ticket ticket-hist

# Generate branch name, checkout from main, and push to origin
ticket:
	@bash scripts/make-ticket.sh

# Show histogram of allocated tickets
ticket-hist:
	@bash scripts/show-ticket-hist.sh


######################################################################
# Definitions

BARKBANK_SCHEMA_DIR=../barkbank-schema

# Number of playwright workers
PW_WORKERS=1


######################################################################
# Development
#
# run - Runs the development server
#
# build - Next Build - this checks types are correct
#
# run-build - Runs the Next Build
#
# fmt - Formats the code
#
# test - Execute unit tests, checks for wip tasks
#
# lint - Linting checks
#
.PHONY: run build run-build fmt test lint test-ui

run:
	npm run dev

build:
	npm run build

run-build:
	npm run start

fmt:
	npm run fmt

test:
	bash scripts/testdb.sh testDbUp
	npm run test
	bash scripts/testdb.sh testDbDown
	bash scripts/test_minimal_process_env_usage.sh
	bash scripts/test_no_wip_tasks_remaining.sh

lint:
	npm run lint


######################################################################
# UI Testing
#
.PHONY: test-ui test-ui-headed run-playwright playwright-browsers playwright-report

test-ui: playwright-browsers
	npx playwright test --workers $(PW_WORKERS) --project "Mobile Chrome" --project "chromium"

test-ui-headed: playwright-browsers
	npx playwright test --workers $(PW_WORKERS) --project "Mobile Chrome" --project "chromium" --headed

run-playwright: playwright-browsers
	npx playwright test --ui --project "Mobile Chrome" --project "chromium"
#	npx playwright test --ui --project "Mobile Chrome" --project "chromium" --workers 1

# Installs playwright browsers
playwright-browsers:
	npx playwright install chromium firefox webkit

# Shows the latest report. Including that generated by the interactive
# mode test.
playwright-report:
	npx playwright show-report


######################################################################
# NPM

.PHONY: npm-install
npm-install:
	npm install

.PHONY: npm-check-updates
npm-check-updates:
	npx npm-check-updates


######################################################################
# Local database
#
.PHONY: db-reset db-refill


# Reset the local dev database. This assumes that the barkbank-schema
# repository is a sibling directory of barkbank-pawtal.
db-reset:
	bash scripts/reset-local-database.sh


# Purges the database and recreates test users, vets, and admins in
# the local dev database. For efficiency, this does not recreate a
# database. So, it is a prerequisite that a local database is
# running. If it is not, use db-reset.
db-refill:
	npx node scripts/setup-dev-data.js


######################################################################
# Task management
#
# wip - WIP notes for the current merge request. These should not be
#     merged into main.
#
# step - A small step towards some direction. These should be small
#     changes. They can be merged into main.
#
# todo - Something we should work on later.
#
.PHONY: wip todo step

wip:
	@echo Remaining wip tasks
	@echo
	@grep -n --color=always -R 'WIP[:]' src tests db e2e scripts || true
	@echo
	@echo Number of WIPs remaining
	@grep -n --color=always -R 'WIP[:]' src tests db e2e scripts | wc -l

todo:
	@echo Remaining todo tasks
	@echo
	@grep -n --color=always -R 'TODO[:]' src tests db e2e scripts || true
	@echo
	@echo Number of TODOs remaining
	@grep -n --color=always -R 'TODO[:]' src tests db e2e scripts | wc -l

step:
	@echo Remaining step tasks
	@echo
	@grep -n --color=always -R 'STEP[:]' src tests db e2e scripts || true
	@echo
	@echo Number of STEPs remaining
	@grep -n --color=always -R 'STEP[:]' src tests db e2e scripts | wc -l


######################################################################
# Schema management

# Diff local schema and barkbank-schemas
.PHONY: schema-diff
schema-diff:
	[ ! -d $(BARKBANK_SCHEMA_DIR) ] || diff --color=always db $(BARKBANK_SCHEMA_DIR)/schema

# Sync the schema from barkbank-schema into barkbank-pawtal
.PHONY: schema-recv
schema-recv:
	rsync -avz $(BARKBANK_SCHEMA_DIR)/schema/ db/

# Sync the schema from barkbank-pawtal into barkbank-schema
.PHONY: schema-send
schema-send:
	rsync -avz db/ $(BARKBANK_SCHEMA_DIR)/schema/
